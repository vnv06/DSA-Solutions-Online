class Solution:
    def combinationSum(self, nums: List[int], target: int) -> List[List[int]]:
        res = []
        nums.sort()
        def dfs(i, cur, sum):
            if i >= len(nums) or sum > target:
                return
            if sum == target:
                res.append(cur.copy())
                return
            cur.append(nums[i])
            dfs(i, cur, sum + nums[i])
            cur.pop()
            while i + 1 < len(nums) and nums [i] == nums[i + 1]:
                i += 1
            dfs(i + 1, cur, sum)
        dfs(0, [], 0)
        return res 
